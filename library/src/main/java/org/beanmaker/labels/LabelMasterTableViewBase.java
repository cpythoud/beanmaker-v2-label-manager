// Generated by BeanMaker V2, on January 20, 2025, 12:20:38â€¯PM EST
// Library Version #2.3-SNAPSHOT

package org.beanmaker.labels;

import java.util.List;

import java.util.stream.Collectors;

import org.beanmaker.v2.runtime.DbBeanInterface;
import org.beanmaker.v2.runtime.MasterTableCellDefinition;

import org.beanmaker.v2.runtime.annotations.DoNotEdit;

import org.jcodegen.html.TdTag;
import org.jcodegen.html.ThTag;
import org.jcodegen.html.TrTag;

@DoNotEdit(generator = "org.beanmaker.v2.codegen.BeanMasterTableViewBaseSourceFile", version = "2.3-SNAPSHOT", date = "2025-01-20T17:20:38.633644141Z")
abstract class LabelMasterTableViewBase extends LocalMasterTableView {

	LabelMasterTableViewBase() {
		super(LabelParameters.INSTANCE.getDatabaseTableName(), LabelParameters.INSTANCE.getLocalization());
	}

	@Override
	protected TrTag getFilterRow() {
		TrTag filterRow = getDefaultStartOfFilterRow();

		if (displayId)
			filterRow.child(getIdFilterCell());
		filterRow.child(getNameFilterCell());

		if (doDataToggle)
			filterRow.child(showMoreLessCell());

		return filterRow;
	}

	ThTag getIdFilterCell() {
		return getStringFilterCell("id");
	}

	ThTag getNameFilterCell() {
		return getStringFilterCell("name");
	}

	@Override
	protected TrTag getTitleRow() {
		TrTag titleRow = getDefaultStartOfTitleRow();

		if (displayId)
			titleRow.child(getIdTitleCell());
		titleRow.child(getNameTitleCell());

		return titleRow;
	}

	ThTag getIdTitleCell() {
		return getTitleCell("id");
	}

	ThTag getNameTitleCell() {
		return getTitleCell("name");
	}

	@Override
	protected List<TrTag> getData() {
		return getLabelInventory().stream().map(this::getTableLine).collect(Collectors.toList());
	}

	List<Label> getLabelInventory() {
		return getBeansInLocalOrder(Label.getAll());
	}

	@Override
	protected long getLineCount() {
		return Label.getCount();
	}

	@Override
	protected <B extends DbBeanInterface> void addDataToLine(TrTag line, B label) {
		FormattedLabelData labelData = new FormattedLabelData((Label) label, dbBeanLocalization);
		line.child(getNameTableCell(labelData));
	}

	TdTag getNameTableCell(FormattedLabelData label) {
		return getTableCell(MasterTableCellDefinition.createTextCellDefinition("name", label.getName()));
	}

}
