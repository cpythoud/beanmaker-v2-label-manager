// Generated by BeanMaker V2, on July 24, 2025, 5:42:40â€¯PM EST
// Library Version #2.3-SNAPSHOT

package org.beanmaker.labels;

import org.beanmaker.v2.runtime.DbBeanLanguage;
import org.beanmaker.v2.runtime.HFHParameters;
import org.beanmaker.v2.runtime.HttpRequestParameters;

import org.beanmaker.v2.runtime.annotations.DoNotEdit;

import org.jcodegen.html.FormTag;
import org.jcodegen.html.InputTag;
import org.jcodegen.html.Tag;

@DoNotEdit(generator = "org.beanmaker.v2.codegen.BeanHTMLViewBaseSourceFile", version = "2.3-SNAPSHOT", date = "2025-07-24T22:42:40.324193911Z")
abstract class LabelHTMLViewBase extends HTMLView {

	final LabelEditor labelEditor;

	LabelHTMLViewBase(LabelEditor labelEditor, DbBeanLanguage dbBeanLanguage) {
		super(labelEditor, LabelParameters.INSTANCE.getLocalization(dbBeanLanguage));
		labelEditor.setCurrentDbBeanLanguage(dbBeanLanguage);
		this.labelEditor = labelEditor;
	}

	public LabelEditor getLabelEditor() {
		return labelEditor;
	}

	boolean isNameRequiredInHtmlForm() {
		return labelEditor.isNameRequired();
	}

	@Override
	public FormTag getHtmlFormTag() {
		FormTag form = getFormStart();
		var fields = getFormElementsContainer(form);
		composeErrorContainer(fields);
		composeHiddenSubmitField(fields);
		composeNameFormElement(fields);
		composeAdditionalHtmlFormFields(fields);
		if (readonly)
			return finalizeForm(form, fields);

		var buttons = getFormButtonsContainer(form);
		composeButtons(buttons);

		return finalizeForm(form, fields, buttons);
	}

	HFHParameters getNameFormElementParameters() {
		HFHParameters params = new HFHParameters();
		params.setField("name");
		params.setIdBean(labelEditor.getId());
		params.setValue(labelEditor.getName());
		params.setFieldLabel(labelEditor.getNameLabel());
		params.setInputType(InputTag.InputType.TEXT);
		params.setRequired(isNameRequiredInHtmlForm());
		params.setReadonly(readonly);
		params.setMaxLength(128);
		return params;
	}

	void composeNameFormElement(Tag form) {
		form.child(htmlFormHelper.getTextField(getNameFormElementParameters()));
	}

	@Override
	public void setAllFields(HttpRequestParameters parameters) {
		reset();

		labelEditor.setName(parameters.getValue("name"));
	}

}
