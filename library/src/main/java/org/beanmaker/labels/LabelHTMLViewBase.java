// Generated by BeanMaker V2, on August 21, 2024, 11:32:35â€¯AM COT
// Library Version #2.2-SNAPSHOT

package org.beanmaker.labels;

import javax.annotation.processing.Generated;

import org.beanmaker.v2.runtime.DbBeanLanguage;
import org.beanmaker.v2.runtime.HFHParameters;
import org.beanmaker.v2.runtime.HttpRequestParameters;

import org.jcodegen.html.FormTag;
import org.jcodegen.html.InputTag;
import org.jcodegen.html.Tag;

@Generated(value = "org.beanmaker.v2.codegen.BeanHTMLViewBaseSourceFile", date = "2024-08-21T16:32:35.176134800Z", comments = "DO-NOT-EDIT,2.2-SNAPSHOT")
abstract class LabelHTMLViewBase extends HTMLView {

	final LabelEditor labelEditor;

	LabelHTMLViewBase(LabelEditor labelEditor, DbBeanLanguage dbBeanLanguage) {
		super(labelEditor, LabelParameters.INSTANCE.getLocalization(dbBeanLanguage));
		labelEditor.setCurrentDbBeanLanguage(dbBeanLanguage);
		this.labelEditor = labelEditor;
	}

	public LabelEditor getLabelEditor() {
		return labelEditor;
	}

	boolean isNameRequiredInHtmlForm() {
		return labelEditor.isNameRequired();
	}

	@Override
	public FormTag getHtmlFormTag() {
		FormTag form = getFormStart();
		composeHiddenSubmitField(form);
		composeNameFormElement(form);
		composeAdditionalHtmlFormFields(form);
		if (!readonly)
			composeButtons(form);

		return form;
	}

	HFHParameters getNameFormElementParameters() {
		HFHParameters params = new HFHParameters();
		params.setField("name");
		params.setIdBean(labelEditor.getId());
		params.setValue(labelEditor.getName());
		params.setFieldLabel(labelEditor.getNameLabel());
		params.setInputType(InputTag.InputType.TEXT);
		params.setRequired(isNameRequiredInHtmlForm());
		params.setReadonly(readonly);
		params.setMaxLength(128);
		return params;
	}

	void composeNameFormElement(Tag form) {
		form.child(htmlFormHelper.getTextField(getNameFormElementParameters()));
	}

	@Override
	public void setAllFields(HttpRequestParameters parameters) {
		reset();

		labelEditor.setName(parameters.getValue("name"));
	}

}
